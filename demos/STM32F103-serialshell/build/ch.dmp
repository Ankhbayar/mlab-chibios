
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000130

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00004700 memsz 0x00004700 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08004700 align 2**15
         filesz 0x00000024 memsz 0x00001090 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       00000130  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000045d0  08000130  08000130  00008130  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  3 .data         00000024  20000800  08004700  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00001068  20000828  08004728  00010824  2**3
                  ALLOC
  5 .debug_info   00013071  00000000  00000000  00010824  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00004843  00000000  00000000  00023895  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000ac0  00000000  00000000  000280d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00001280  00000000  00000000  00028b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000060c7  00000000  00000000  00029e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002a92  00000000  00000000  0002fedf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      00000011  00000000  00000000  00032971  2**0
                  CONTENTS, READONLY
 12 .ARM.attributes 00000033  00000000  00000000  00032982  2**0
                  CONTENTS, READONLY
 13 .debug_frame  00001a74  00000000  00000000  000329b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00007ed5  00000000  00000000  0003442c  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
08000130 l    d  .text	00000000 .text
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000828 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08003ed0 l     F .text	00000034 Thread1
08003f10 l     F .text	0000001c shell
20000eb0 l     O .bss	00000130 waThread1
20000fe0 l     O .bss	000008b0 waShell
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
08000520 l     F .text	0000015c strcmp_unaligned
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strstr.c
080006e0 l     F .text	000000bc critical_factorization
0800079c l     F .text	00000222 two_way_long_needle
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000e4c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000828 l     O .bss	0000004c mainthread.4860
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08001490 l     F .text	00000038 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
080018d0 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d7c l     O .bss	00000004 endmem
20000d80 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000d88 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
08001cd0 l     F .text	0000000c putwouldblock
08001ce0 l     F .text	0000000c getwouldblock
08001cf0 l     F .text	00000022 getflags
08001d20 l     F .text	00000006 readt
08001d30 l     F .text	0000000a reads
08001d40 l     F .text	00000006 writet
08001d50 l     F .text	0000000a writes
08001d60 l     F .text	00000006 gett
08001d70 l     F .text	00000006 putt
080042a0 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 usb.c
08001e90 l     F .text	00000022 set_address
080042d0 l     O .text	00000002 zero_status
080042e0 l     O .text	00000002 active_status
080042f0 l     O .text	00000002 halted_status
00000000 l    df *ABS*	00000000 tm.c
080022f0 l     F .text	0000000e tm_start
08002300 l     F .text	00000030 tm_stop
20000da8 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
080024c0 l     F .text	00000014 notify2
08004300 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
08004310 l     O .text	00000011 CSWTCH.16
08004330 l     O .text	00000006 CSWTCH.10
08004350 l     O .text	0000001c ep0config
20000e70 l     O .bss	00000010 ep0_state
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 chprintf.c
08002e60 l     F .text	00000044 ltoa
00000000 l    df *ABS*	00000000 microshell2.c
00000000 l    df *ABS*	00000000 microrl.c
080034c0 l     F .text	00000056 split
08003520 l     F .text	00000056 u16bit_to_str
08003580 l     F .text	00000066 terminal_reset_cursor
080035f0 l     F .text	0000006c terminal_move_cursor
08003660 l     F .text	00000064 terminal_print_line
080036d0 l     F .text	000000e4 hist_search
080037c0 l     F .text	0000004c microrl_backspace.part.0
08003810 l     F .text	0000007a microrl_insert_text
20000ea4 l     O .bss	00000004 seq.4997
20000ea8 l     O .bss	00000004 tmpch
20000eac l     O .bss	00000004 escape.5041
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 
08004700 l       .text	00000000 _etext
00010000 l       *ABS*	00000000 __ram_size__
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
20010000 l       *ABS*	00000000 __ram_end__
20001890 l       .bss	00000000 _end
00000400 l       *ABS*	00000000 __main_stack_size__
00000400 l       *ABS*	00000000 __process_stack_size__
08004370 g     O .text	00000054 pal_default_config
08000e20  w    F .text	00000002 Vector58
08000e20  w    F .text	00000002 VectorE8
08000e20  w    F .text	00000002 Vector9C
08000f90 g     F .text	00000048 nvicEnableVector
080011a0 g     F .text	00000030 dbg_check_lock_from_isr
08001850 g     F .text	0000004c chEvtSignalFlagsI
08000e20  w    F .text	00000002 VectorAC
08001810 g     F .text	00000018 chThdExit
080010b0 g     F .text	00000050 chSysTimerHandlerI
080018a0 g     F .text	00000030 chEvtBroadcastFlagsI
08001520 g     F .text	00000048 chSchGoSleepTimeoutS
08002a40 g     F .text	00000044 usb_lld_write_packet_buffer
08001130 g     F .text	00000030 dbg_check_lock
08003260 g     F .text	00000016 print
08000e20  w    F .text	00000002 Vector5C
08000e20  w    F .text	00000002 NMIVector
08000e20  w    F .text	00000002 Vector11C
20000e80 g     O .bss	0000001c compl_world
080021f0 g     F .text	0000008c _usb_ep0in
08002d10 g     F .text	00000026 usb_lld_prepare_receive
080027e0 g     F .text	00000012 Vector8C
08000240 g     F .text	000000bc memmove
08000e20  w    F .text	00000002 VectorDC
08003190 g     F .text	000000bc complete
08000000 g     O startup	00000130 _vectors
08003890 g     F .text	00000054 microrl_init
080014d0 g     F .text	00000050 chSchGoSleepS
08000e20  w    F .text	00000002 Vector110
080038f0 g     F .text	00000006 microrl_set_complete_callback
20001890 g       .bss	00000000 __heap_base__
08000e20  w    F .text	00000002 Vector120
08001680 g     F .text	000000a0 chThdCreateI
08002de0 g     F .text	0000002e usb_lld_clear_out
08001100 g     F .text	00000028 dbg_check_enable
08000e20  w    F .text	00000002 VectorC8
08001570 g     F .text	00000060 chSchWakeupS
08001e30 g     F .text	00000060 sdIncomingDataI
08001b00 g     F .text	0000004a chOQGetI
08001430 g     F .text	0000001a _scheduler_init
08001ed0 g     F .text	00000010 usbObjectInit
08001720 g     F .text	0000006c chThdCreateStatic
08000e20  w    F .text	00000002 Vector94
08000e20  w    F .text	00000002 VectorA8
080001a0 g     F .text	00000094 memcpy
08001f20 g     F .text	000002cc _usb_ep0setup
08000e20  w    F .text	00000002 VectorB4
20000dac g     O .bss	00000074 SD2
08001450 g     F .text	00000040 chSchReadyI
08000130 g       startup	00000000 __fini_array_end
08000e30  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08001360 g     F .text	00000018 _vt_init
08001c20 g     F .text	00000030 chCoreAllocI
08001c80 g     F .text	00000020 _heap_init
08000e20  w    F .text	00000002 Vector74
08001ca0 g     F .text	0000002a halInit
08000e20  w    F .text	00000002 VectorEC
20000828 g       .bss	00000000 _bss_start
08000e20  w    F .text	00000002 UsageFaultVector
20010000 g       *ABS*	00000000 __heap_end__
08000e20  w    F .text	00000002 DebugMonitorVector
08003280 g     F .text	0000005a print_help
08001160 g     F .text	00000034 dbg_check_unlock
08000e20  w    F .text	00000002 Vector40
08000e20  w    F .text	00000002 VectorF8
08000e20  w    F .text	00000002 Vector108
08000d00 g     F .text	00000118 ResetHandler
080019d0 g     F .text	00000094 chIQReadTimeout
08000e20  w    F .text	00000002 VectorBC
080029b0 g     F .text	0000003a usb_lld_read_setup
08000e20  w    F .text	00000002 Vector124
08000e70 g     F .text	00000034 _port_init
08002390 g     F .text	00000078 hal_lld_init
08002d60 g     F .text	0000001e usb_lld_start_out
080017c0 g     F .text	0000004c chThdExitS
20000808 g     O .data	00000018 keyworld
08002da0 g     F .text	0000001e usb_lld_stall_out
2000093c g     O .bss	00000408 dbg_trace_buffer
08000e20  w    F .text	00000002 PendSVVector
08000e20  w    F .text	00000002 Vector118
08001380 g     F .text	0000005c chVTSetI
08000e20  w    F .text	00000002 Vector64
20001890 g       .bss	00000000 _bss_end
20000d48 g     O .bss	00000004 dbg_panic_msg
08000cf0  w    F .text	00000002 _default_exit
08000e20  w    F .text	00000002 VectorCC
08002680 g     F .text	00000026 sd_lld_init
08000e20  w    F .text	00000002 Vector54
08000e20  w    F .text	00000002 Vector98
08003470 g     F .text	00000050 start_shell
080024e0 g     F .text	00000198 VectorD8
08000e20  w    F .text	00000002 Vector24
08001290 g     F .text	0000002c chDbgCheckClassI
08002930 g     F .text	0000003c usb_lld_reset
080015d0 g     F .text	0000004c chSchDoReschedule
08001030 g     F .text	0000007a chSysInit
08001790 g     F .text	00000030 chThdSleep
08001900 g     F .text	0000001a chIQInit
08000e20  w    F .text	00000002 Vector84
08002d40 g     F .text	00000020 usb_lld_prepare_transmit
08000f30 g     F .text	0000002a SysTickVector
20000938 g     O .bss	00000004 dbg_isr_cnt
08002990 g     F .text	00000020 usb_lld_get_status_in
08002410 g     F .text	000000a2 stm32_clock_init
08000bd0 g     F .text	00000092 memchr
08002730 g     F .text	000000a6 _pal_lld_init
08001d80 g     F .text	00000004 sdInit
08000e20  w    F .text	00000002 BusFaultVector
08000e20  w    F .text	00000002 VectorD0
08002e10 g     F .text	0000002c usb_lld_clear_in
08002800 g     F .text	0000000c usb_lld_init
08001bf0 g     F .text	0000002c _core_init
080009c0 g     F .text	0000020e strstr
08001de0 g     F .text	00000048 sdStart
08000e20  w    F .text	00000002 VectorE4
08002280 g     F .text	00000068 _usb_ep0out
08000e20  w    F .text	00000002 VectorC0
08000f60 g     F .text	00000010 _port_switch
08000e50 g     F .text	00000012 SVCallVector
08000ce0  w    F .text	00000002 __late_init
08001350 g     F .text	0000000e chDbgPanic
20000d4c g     O .bss	00000010 vtlist
08000e20  w    F .text	00000002 HardFaultVector
08000eb0 g     F .text	00000078 _port_irq_epilogue
08001c50 g     F .text	00000024 chCoreAlloc
080012c0 g     F .text	0000002c chDbgCheckClassS
08000e20  w    F .text	00000002 VectorF0
08000c70 g     F .text	00000062 memcmp
08000e20  w    F .text	00000002 Vector12C
08001ee0 g     F .text	00000034 _usb_reset
08000e20  w    F .text	00000002 Vector100
08001250 g     F .text	00000040 dbg_check_leave_isr
08004700 g       .text	00000000 _textdata
08000e20  w    F .text	00000002 VectorE0
08000e20  w    F .text	00000002 VectorF4
08003aa0 g     F .text	00000428 microrl_insert_char
08000e20  w    F .text	00000002 MemManageVector
08000130 g       startup	00000000 __fini_array_start
08000300 g     F .text	00000098 memset
08000130 g     F .text	00000068 main
08000e20  w    F .text	00000002 Vector6C
20000d5c g     O .bss	00000020 rlist
08000e20  w    F .text	00000002 VectorA0
20000820 g     O .data	00000004 prompt_default
08001210 g     F .text	00000040 dbg_check_enter_isr
20000e20 g     O .bss	00000050 USBD1
08000130 g       startup	00000000 __init_array_end
08000e20  w    F .text	00000002 VectorC4
08000e20  w    F .text	00000002 Vector7C
20000800 g     O .data	00000008 ver_keyworld
08001830 g     F .text	0000001c chMtxInit
08001010 g     F .text	00000014 _idle_thread
08001b50 g     F .text	00000094 chOQWriteTimeout
080032e0 g     F .text	00000188 execute
08000e20  w    F .text	00000002 VectorB0
080040b0 g     O .text	00000016 ch_debug
08002eb0 g     F .text	000002dc chprintf
08002a90 g     F .text	00000274 Vector90
080004a0 g     F .text	0000007e strcmp
20000d44 g     O .bss	00000004 dbg_lock_cnt
08000e20  w    F .text	00000002 Vector114
08000f70 g     F .text	00000016 _port_thread_start
08000e20  w    F .text	00000002 Vector60
08000e20  w    F .text	00000002 Vector1C
08000e20  w    F .text	00000002 Vector48
08002dc0 g     F .text	0000001e usb_lld_stall_in
20000400 g       .stacks	00000000 __process_stack_base__
08003900 g     F .text	00000006 microrl_set_execute_callback
08003250 g     F .text	00000004 sigint
08000e20  w    F .text	00000002 Vector70
08000e20  w    F .text	00000002 VectorD4
08000fe0 g     F .text	00000030 nvicSetSystemHandlerPriority
20000878 g     O .bss	000000c0 _idle_thread_wa
08001a70 g     F .text	00000018 chOQInit
08001970 g     F .text	0000005a chIQGetTimeout
20000800 g       .data	00000000 _data
08000e20  w    F .text	00000002 Vector4C
08000e20  w    F .text	00000002 Vector80
08001920 g     F .text	00000050 chIQPutI
08000e40 g     F .text	0000000e _port_switch_from_isr
08002810 g     F .text	00000014 usb_lld_set_address
08002330 g     F .text	00000046 tmInit
08000e20  w    F .text	00000002 Vector68
080012f0 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08000e20  w    F .text	00000002 Vector78
20000824 g       .data	00000000 _edata
080013e0 g     F .text	00000048 chVTResetI
08000e20 g     F .text	00000002 _unhandled_exception
08001d90 g     F .text	00000042 sdObjectInit
08000e20  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08001ec0 g     F .text	00000004 usbInit
08000e20  w    F .text	00000002 Vector104
08000e20  w    F .text	00000002 Vector10C
08001310 g     F .text	00000040 dbg_trace
08000130 g       startup	00000000 __init_array_start
08002d80 g     F .text	0000001e usb_lld_start_in
08002970 g     F .text	0000001e usb_lld_get_status_out
20000e9c g     O .bss	00000008 name
08001620 g     F .text	00000052 _thread_init
08000e20  w    F .text	00000002 Vector50
08000680 g     F .text	0000005e strlen
080003a0 g     F .text	000000fe strchr
08001a90 g     F .text	00000064 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08003920 g     F .text	00000134 new_line_handler
08000e20  w    F .text	00000002 Vector44
08000e20  w    F .text	00000002 Vector28
08002e50 g     F .text	00000002 boardInit
08000e20  w    F .text	00000002 VectorB8
080026b0 g     F .text	0000007c sd_lld_start
08003a60 g     F .text	00000034 mlab_sigint
08000e20  w    F .text	00000002 VectorFC
080011d0 g     F .text	00000034 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08003910 g     F .text	00000006 microrl_set_sigint_callback
08002380 g     F .text	00000002 sduInit
08000e20  w    F .text	00000002 Vector34
08002e40 g     F .text	00000004 __early_init
080029f0 g     F .text	0000004e usb_lld_read_packet_buffer
08000e20  w    F .text	00000002 Vector128
08000e20  w    F .text	00000002 VectorA4
08002830 g     F .text	000000f8 usb_lld_init_endpoint
08000e20  w    F .text	00000002 Vector20


