
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000150

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00003b90 memsz 0x00003b90 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08003b90 align 2**15
         filesz 0x00000024 memsz 0x00001030 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       00000150  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003a40  08000150  08000150  00008150  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  3 .data         00000024  20000800  08003b90  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00001008  20000828  08003bb8  00010824  2**3
                  ALLOC
  5 .debug_info   0000f2a1  00000000  00000000  00010824  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003cdf  00000000  00000000  0001fac5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 000008b8  00000000  00000000  000237a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000f10  00000000  00000000  0002405c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000051a1  00000000  00000000  00024f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002279  00000000  00000000  0002a10d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      00000011  00000000  00000000  0002c386  2**0
                  CONTENTS, READONLY
 12 .ARM.attributes 00000033  00000000  00000000  0002c397  2**0
                  CONTENTS, READONLY
 13 .debug_frame  000014cc  00000000  00000000  0002c3cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000644f  00000000  00000000  0002d898  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
08000150 l    d  .text	00000000 .text
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000828 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08003410 l     F .text	00000034 Thread1
08003450 l     F .text	0000001c shell
20000e50 l     O .bss	00000130 waThread1
20000f80 l     O .bss	000008b0 waShell
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
08000540 l     F .text	0000015c strcmp_unaligned
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strstr.c
08000700 l     F .text	000000bc critical_factorization
080007bc l     F .text	00000222 two_way_long_needle
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000e6c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000828 l     O .bss	0000004c mainthread.4860
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
080014b0 l     F .text	00000038 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
080018f0 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d7c l     O .bss	00000004 endmem
20000d80 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000d88 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
08001cf0 l     F .text	0000000c putwouldblock
08001d00 l     F .text	0000000c getwouldblock
08001d10 l     F .text	00000022 getflags
08001d40 l     F .text	00000006 readt
08001d50 l     F .text	0000000a reads
08001d60 l     F .text	00000006 writet
08001d70 l     F .text	0000000a writes
08001d80 l     F .text	00000006 gett
08001d90 l     F .text	00000006 putt
080037e0 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 tm.c
08001eb0 l     F .text	0000000e tm_start
08001ec0 l     F .text	00000030 tm_stop
20000da8 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
08002080 l     F .text	00000014 notify2
08003810 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 chprintf.c
08002390 l     F .text	00000044 ltoa
00000000 l    df *ABS*	00000000 microshell2.c
00000000 l    df *ABS*	00000000 microrl.c
080029f0 l     F .text	00000056 split
08002a50 l     F .text	00000056 u16bit_to_str
08002ab0 l     F .text	00000066 terminal_reset_cursor
08002b20 l     F .text	0000006c terminal_move_cursor
08002b90 l     F .text	00000064 terminal_print_line
08002c00 l     F .text	000000e4 hist_search
08002cf0 l     F .text	0000004c microrl_backspace.part.0
08002d40 l     F .text	0000007a microrl_insert_text
20000e44 l     O .bss	00000004 seq.4997
20000e48 l     O .bss	00000004 tmpch
20000e4c l     O .bss	00000004 escape.5041
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 
08003b90 l       .text	00000000 _etext
00010000 l       *ABS*	00000000 __ram_size__
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
20010000 l       *ABS*	00000000 __ram_end__
20001830 l       .bss	00000000 _end
00000400 l       *ABS*	00000000 __main_stack_size__
00000400 l       *ABS*	00000000 __process_stack_size__
08003820 g     O .text	0000003c pal_default_config
08000e40  w    F .text	00000002 Vector58
08000e40  w    F .text	00000002 VectorE8
08000e40  w    F .text	00000002 Vector9C
08000fb0 g     F .text	00000048 nvicEnableVector
080011c0 g     F .text	00000030 dbg_check_lock_from_isr
08001870 g     F .text	0000004c chEvtSignalFlagsI
08000e40  w    F .text	00000002 VectorAC
08001830 g     F .text	00000018 chThdExit
080010d0 g     F .text	00000050 chSysTimerHandlerI
080018c0 g     F .text	00000030 chEvtBroadcastFlagsI
08001540 g     F .text	00000048 chSchGoSleepTimeoutS
08001150 g     F .text	00000030 dbg_check_lock
08002790 g     F .text	00000016 print
08000e40  w    F .text	00000002 Vector5C
08000e40  w    F .text	00000002 NMIVector
08000e40  w    F .text	00000002 Vector11C
20000e20 g     O .bss	0000001c compl_world
08000e40  w    F .text	00000002 Vector8C
08000260 g     F .text	000000bc memmove
08000e40  w    F .text	00000002 VectorDC
080026c0 g     F .text	000000bc complete
08000000 g     O startup	00000150 _vectors
08002dc0 g     F .text	00000068 microrl_init
080014f0 g     F .text	00000050 chSchGoSleepS
08000e40  w    F .text	00000002 Vector110
08002e30 g     F .text	00000006 microrl_set_complete_callback
20001830 g       .bss	00000000 __heap_base__
08000e40  w    F .text	00000002 Vector120
080016a0 g     F .text	000000a0 chThdCreateI
08001120 g     F .text	00000028 dbg_check_enable
08000e40  w    F .text	00000002 VectorC8
08001590 g     F .text	00000060 chSchWakeupS
08001e50 g     F .text	00000060 sdIncomingDataI
08001b20 g     F .text	0000004a chOQGetI
08001450 g     F .text	0000001a _scheduler_init
08001740 g     F .text	0000006c chThdCreateStatic
08000e40  w    F .text	00000002 Vector94
08000e40  w    F .text	00000002 VectorA8
080001c0 g     F .text	00000094 memcpy
08000e40  w    F .text	00000002 VectorB4
20000dac g     O .bss	00000074 SD2
08001470 g     F .text	00000040 chSchReadyI
08000150 g       startup	00000000 __fini_array_end
08000e50  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08001380 g     F .text	00000018 _vt_init
08001c40 g     F .text	00000030 chCoreAllocI
08001ca0 g     F .text	00000020 _heap_init
08000e40  w    F .text	00000002 Vector74
08001cc0 g     F .text	00000022 halInit
08000e40  w    F .text	00000002 VectorEC
20000828 g       .bss	00000000 _bss_start
08000e40  w    F .text	00000002 UsageFaultVector
20010000 g       *ABS*	00000000 __heap_end__
08000e40  w    F .text	00000002 DebugMonitorVector
080027b0 g     F .text	0000005a print_help
08001180 g     F .text	00000034 dbg_check_unlock
08000e40  w    F .text	00000002 Vector40
08000e40  w    F .text	00000002 VectorF8
08000e40  w    F .text	00000002 Vector108
08000d20 g     F .text	00000118 ResetHandler
080019f0 g     F .text	00000094 chIQReadTimeout
08000e40  w    F .text	00000002 VectorBC
08000e40  w    F .text	00000002 Vector124
08000e90 g     F .text	00000034 _port_init
08001f40 g     F .text	00000074 hal_lld_init
080017e0 g     F .text	0000004c chThdExitS
20000808 g     O .data	00000018 keyworld
08000e40  w    F .text	00000002 Vector148
2000093c g     O .bss	00000408 dbg_trace_buffer
08000e40  w    F .text	00000002 PendSVVector
08000e40  w    F .text	00000002 Vector118
080013a0 g     F .text	0000005c chVTSetI
08000e40  w    F .text	00000002 Vector64
20001830 g       .bss	00000000 _bss_end
20000d48 g     O .bss	00000004 dbg_panic_msg
08000d10  w    F .text	00000002 _default_exit
08000e40  w    F .text	00000002 VectorCC
08002240 g     F .text	00000026 sd_lld_init
08000e40  w    F .text	00000002 Vector54
08000e40  w    F .text	00000002 Vector98
080029a0 g     F .text	00000050 start_shell
080020a0 g     F .text	00000198 VectorD8
08000e40  w    F .text	00000002 Vector138
08000e40  w    F .text	00000002 Vector24
080012b0 g     F .text	0000002c chDbgCheckClassI
080015f0 g     F .text	0000004c chSchDoReschedule
08001050 g     F .text	0000007a chSysInit
080017b0 g     F .text	00000030 chThdSleep
08001920 g     F .text	0000001a chIQInit
08000e40  w    F .text	00000002 Vector84
08000f50 g     F .text	0000002a SysTickVector
20000938 g     O .bss	00000004 dbg_isr_cnt
08001fc0 g     F .text	000000c0 stm32_clock_init
08000bf0 g     F .text	00000092 memchr
080022f0 g     F .text	0000007a _pal_lld_init
08001da0 g     F .text	00000004 sdInit
08000e40  w    F .text	00000002 BusFaultVector
08000e40  w    F .text	00000002 VectorD0
08001c10 g     F .text	0000002c _core_init
080009e0 g     F .text	0000020e strstr
08001e00 g     F .text	00000048 sdStart
08000e40  w    F .text	00000002 Vector140
08000e40  w    F .text	00000002 VectorE4
08000e40  w    F .text	00000002 VectorC0
08000e40  w    F .text	00000002 Vector130
08000f80 g     F .text	00000010 _port_switch
08000e70 g     F .text	00000012 SVCallVector
08000d00  w    F .text	00000002 __late_init
08001370 g     F .text	0000000e chDbgPanic
20000d4c g     O .bss	00000010 vtlist
08000e40  w    F .text	00000002 HardFaultVector
08000ed0 g     F .text	00000078 _port_irq_epilogue
08000e40  w    F .text	00000002 Vector134
08001c70 g     F .text	00000024 chCoreAlloc
080012e0 g     F .text	0000002c chDbgCheckClassS
08000e40  w    F .text	00000002 VectorF0
08000c90 g     F .text	00000062 memcmp
08000e40  w    F .text	00000002 Vector12C
08000e40  w    F .text	00000002 Vector13C
08000e40  w    F .text	00000002 Vector100
08001270 g     F .text	00000040 dbg_check_leave_isr
08003b90 g       .text	00000000 _textdata
08000e40  w    F .text	00000002 VectorE0
08000e40  w    F .text	00000002 VectorF4
08002fe0 g     F .text	00000428 microrl_insert_char
08000e40  w    F .text	00000002 MemManageVector
08000150 g       startup	00000000 __fini_array_start
08000320 g     F .text	00000098 memset
08000150 g     F .text	00000068 main
08000e40  w    F .text	00000002 Vector6C
20000d5c g     O .bss	00000020 rlist
08000e40  w    F .text	00000002 VectorA0
20000820 g     O .data	00000004 prompt_default
08001230 g     F .text	00000040 dbg_check_enter_isr
08000150 g       startup	00000000 __init_array_end
08000e40  w    F .text	00000002 VectorC4
08000e40  w    F .text	00000002 Vector7C
20000800 g     O .data	00000008 ver_keyworld
08001850 g     F .text	0000001c chMtxInit
08001030 g     F .text	00000014 _idle_thread
08001b70 g     F .text	00000094 chOQWriteTimeout
08002810 g     F .text	00000188 execute
08000e40  w    F .text	00000002 VectorB0
080035f0 g     O .text	00000016 ch_debug
080023e0 g     F .text	000002dc chprintf
08000e40  w    F .text	00000002 Vector90
080004c0 g     F .text	0000007e strcmp
20000d44 g     O .bss	00000004 dbg_lock_cnt
08000e40  w    F .text	00000002 Vector114
08000f90 g     F .text	00000016 _port_thread_start
08000e40  w    F .text	00000002 Vector60
08000e40  w    F .text	00000002 Vector1C
08000e40  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08002e40 g     F .text	00000006 microrl_set_execute_callback
08002780 g     F .text	00000004 sigint
08000e40  w    F .text	00000002 Vector70
08000e40  w    F .text	00000002 VectorD4
08001000 g     F .text	00000030 nvicSetSystemHandlerPriority
20000878 g     O .bss	000000c0 _idle_thread_wa
08001a90 g     F .text	00000018 chOQInit
08001990 g     F .text	0000005a chIQGetTimeout
20000800 g       .data	00000000 _data
08000e40  w    F .text	00000002 Vector4C
08000e40  w    F .text	00000002 Vector144
08000e40  w    F .text	00000002 Vector80
08001940 g     F .text	00000050 chIQPutI
08000e60 g     F .text	0000000e _port_switch_from_isr
08001ef0 g     F .text	00000046 tmInit
08000e40  w    F .text	00000002 Vector68
08001310 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08000e40  w    F .text	00000002 Vector78
20000824 g       .data	00000000 _edata
08001400 g     F .text	00000048 chVTResetI
08000e40 g     F .text	00000002 _unhandled_exception
08001db0 g     F .text	00000042 sdObjectInit
08000e40  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000e40  w    F .text	00000002 Vector104
08000e40  w    F .text	00000002 Vector10C
08001330 g     F .text	00000040 dbg_trace
08000150 g       startup	00000000 __init_array_start
08000e40  w    F .text	00000002 Vector14C
20000e3c g     O .bss	00000008 name
08001640 g     F .text	00000052 _thread_init
08000e40  w    F .text	00000002 Vector50
080006a0 g     F .text	0000005e strlen
080003c0 g     F .text	000000fe strchr
08001ab0 g     F .text	00000064 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08002e60 g     F .text	00000134 new_line_handler
08000e40  w    F .text	00000002 Vector44
08000e40  w    F .text	00000002 Vector28
08002380 g     F .text	00000002 boardInit
08000e40  w    F .text	00000002 VectorB8
08002270 g     F .text	0000007c sd_lld_start
08002fa0 g     F .text	00000034 mlab_sigint
08000e40  w    F .text	00000002 VectorFC
080011f0 g     F .text	00000034 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08002e50 g     F .text	00000006 microrl_set_sigint_callback
08000e40  w    F .text	00000002 Vector34
08002370 g     F .text	00000004 __early_init
08000e40  w    F .text	00000002 Vector128
08000e40  w    F .text	00000002 VectorA4
08000e40  w    F .text	00000002 Vector20


