
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000130

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00004b60 memsz 0x00004b60 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08004b60 align 2**15
         filesz 0x0000002c memsz 0x000010f8 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       00000130  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004a30  08000130  08000130  00008130  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  3 .data         0000002c  20000800  08004b60  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          000010c8  20000830  08004b90  0001082c  2**3
                  ALLOC
  5 .debug_info   0001227b  00000000  00000000  0001082c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000044b9  00000000  00000000  00022aa7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000a20  00000000  00000000  00026f60  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00001198  00000000  00000000  00027980  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00005bf3  00000000  00000000  00028b18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000263e  00000000  00000000  0002e70b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      00000011  00000000  00000000  00030d49  2**0
                  CONTENTS, READONLY
 12 .ARM.attributes 00000033  00000000  00000000  00030d5a  2**0
                  CONTENTS, READONLY
 13 .debug_frame  000018e0  00000000  00000000  00030d90  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00007772  00000000  00000000  00032670  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
08000130 l    d  .text	00000000 .text
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000830 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08004070 l     F .text	00000034 Thread1
080040b0 l     F .text	0000001c shell
20000f18 l     O .bss	00000130 waThread1
20001048 l     O .bss	000008b0 waShell
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
08000520 l     F .text	0000015c strcmp_unaligned
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strstr.c
080006e0 l     F .text	000000bc critical_factorization
0800079c l     F .text	00000222 two_way_long_needle
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000e4c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000830 l     O .bss	0000004c mainthread.4860
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08001490 l     F .text	00000038 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
080018d0 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d84 l     O .bss	00000004 endmem
20000d88 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000d90 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 usb.c
08001c30 l     F .text	00000022 set_address
080043e0 l     O .text	00000002 zero_status
080043f0 l     O .text	00000002 active_status
08004530 l     O .text	00000002 halted_status
00000000 l    df *ABS*	00000000 tm.c
08002210 l     F .text	0000000e tm_start
08002220 l     F .text	00000030 tm_stop
20000db0 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 serial_usb.c
080022a0 l     F .text	0000000c putwouldblock
080022b0 l     F .text	0000000c getwouldblock
080022c0 l     F .text	00000022 getflags
080022f0 l     F .text	00000090 onotify
08002380 l     F .text	00000080 inotify
08002400 l     F .text	00000006 readt
08002410 l     F .text	0000000a reads
08002420 l     F .text	00000006 writet
08002430 l     F .text	0000000a writes
08002440 l     F .text	00000006 gett
08002450 l     F .text	00000006 putt
08004580 l     O .text	00000024 vmt
20000800 l     O .data	00000007 linecoding
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
080045b0 l     O .text	00000011 CSWTCH.16
080045d0 l     O .text	00000006 CSWTCH.10
080045f0 l     O .text	0000001c ep0config
20000e04 l     O .bss	00000010 ep0_state
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 chprintf.c
08002f40 l     F .text	00000044 ltoa
00000000 l    df *ABS*	00000000 microshell2.c
00000000 l    df *ABS*	00000000 microusb.c
080035a0 l     F .text	00000034 get_descriptor
080035e0 l     F .text	0000004c usb_event
08004940 l     O .text	0000001c ep1config
08004960 l     O .text	00000043 vcom_configuration_descriptor_data
080049b0 l     O .text	00000008 vcom_configuration_descriptor
080049c0 l     O .text	0000001c ep2config
080049e0 l     O .text	00000012 vcom_device_descriptor_data
08004a00 l     O .text	0000001c ep3config
08004a20 l     O .text	00000004 vcom_string0
08004a30 l     O .text	00000026 vcom_string1
08004a60 l     O .text	00000038 vcom_string2
08004aa0 l     O .text	00000008 vcom_string3
08004ab0 l     O .text	00000020 vcom_strings
08004ad0 l     O .text	00000014 serusbcfg
08004af0 l     O .text	00000008 vcom_device_descriptor
00000000 l    df *ABS*	00000000 microrl.c
08003660 l     F .text	00000056 split
080036c0 l     F .text	00000056 u16bit_to_str
08003720 l     F .text	00000066 terminal_reset_cursor
08003790 l     F .text	0000006c terminal_move_cursor
08003800 l     F .text	00000064 terminal_print_line
08003870 l     F .text	000000e4 hist_search
08003960 l     F .text	0000004c microrl_backspace.part.0
080039b0 l     F .text	0000007a microrl_insert_text
20000f0c l     O .bss	00000004 seq.4997
20000f10 l     O .bss	00000004 tmpch
20000f14 l     O .bss	00000004 escape.5041
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 
08004b60 l       .text	00000000 _etext
00010000 l       *ABS*	00000000 __ram_size__
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
20010000 l       *ABS*	00000000 __ram_end__
200018f8 l       .bss	00000000 _end
00000400 l       *ABS*	00000000 __main_stack_size__
00000400 l       *ABS*	00000000 __process_stack_size__
08004610 g     O .text	00000054 pal_default_config
08000e20  w    F .text	00000002 Vector58
08000e20  w    F .text	00000002 VectorE8
08000e20  w    F .text	00000002 Vector9C
08000f90 g     F .text	00000048 nvicEnableVector
080011a0 g     F .text	00000030 dbg_check_lock_from_isr
08001850 g     F .text	0000004c chEvtSignalFlagsI
080024c0 g     F .text	00000054 sduStart
08000e20  w    F .text	00000002 VectorAC
08001810 g     F .text	00000018 chThdExit
080010b0 g     F .text	00000050 chSysTimerHandlerI
080018a0 g     F .text	00000030 chEvtBroadcastFlagsI
08001520 g     F .text	00000048 chSchGoSleepTimeoutS
08002b20 g     F .text	00000044 usb_lld_write_packet_buffer
08001130 g     F .text	00000030 dbg_check_lock
08003340 g     F .text	00000016 print
08000e20  w    F .text	00000002 Vector5C
08000e20  w    F .text	00000002 NMIVector
08003630 g     F .text	00000022 init_usb
08000e20  w    F .text	00000002 Vector11C
08001dc0 g     F .text	00000040 usbStartTransmitI
20000e14 g     O .bss	0000001c compl_world
08002110 g     F .text	0000008c _usb_ep0in
08002df0 g     F .text	00000026 usb_lld_prepare_receive
08002870 g     F .text	00000012 Vector8C
08000240 g     F .text	000000bc memmove
08000e20  w    F .text	00000002 VectorDC
08003270 g     F .text	000000bc complete
08000000 g     O startup	00000130 _vectors
08003a30 g     F .text	00000054 microrl_init
080014d0 g     F .text	00000050 chSchGoSleepS
08000e20  w    F .text	00000002 Vector110
08002560 g     F .text	0000008c sduDataTransmitted
08003a90 g     F .text	00000006 microrl_set_complete_callback
200018f8 g       .bss	00000000 __heap_base__
08000e20  w    F .text	00000002 Vector120
08001680 g     F .text	000000a0 chThdCreateI
08002ec0 g     F .text	0000002e usb_lld_clear_out
08001100 g     F .text	00000028 dbg_check_enable
08000e20  w    F .text	00000002 VectorC8
08001570 g     F .text	00000060 chSchWakeupS
08001430 g     F .text	0000001a _scheduler_init
08001c70 g     F .text	00000010 usbObjectInit
08001720 g     F .text	0000006c chThdCreateStatic
08000e20  w    F .text	00000002 Vector94
08000e20  w    F .text	00000002 VectorA8
080001a0 g     F .text	00000094 memcpy
08001e40 g     F .text	000002cc _usb_ep0setup
08000e20  w    F .text	00000002 VectorB4
08001450 g     F .text	00000040 chSchReadyI
08000130 g       startup	00000000 __fini_array_end
08000e30  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08001360 g     F .text	00000018 _vt_init
08001b80 g     F .text	00000030 chCoreAllocI
080025f0 g     F .text	00000086 sduDataReceived
08001be0 g     F .text	00000020 _heap_init
08000e20  w    F .text	00000002 Vector74
08001c00 g     F .text	00000026 halInit
08000e20  w    F .text	00000002 VectorEC
20000830 g       .bss	00000000 _bss_start
08000e20  w    F .text	00000002 UsageFaultVector
20010000 g       *ABS*	00000000 __heap_end__
08000e20  w    F .text	00000002 DebugMonitorVector
08003360 g     F .text	0000005a print_help
08001160 g     F .text	00000034 dbg_check_unlock
08000e20  w    F .text	00000002 Vector40
08000e20  w    F .text	00000002 VectorF8
08000e20  w    F .text	00000002 Vector108
08001d80 g     F .text	00000040 usbStartReceiveI
08000d00 g     F .text	00000118 ResetHandler
08001980 g     F .text	00000094 chIQReadTimeout
08000e20  w    F .text	00000002 VectorBC
08002a90 g     F .text	0000003a usb_lld_read_setup
08000e20  w    F .text	00000002 Vector124
08000e70 g     F .text	00000034 _port_init
08002690 g     F .text	00000078 hal_lld_init
08002e40 g     F .text	0000001e usb_lld_start_out
080017c0 g     F .text	0000004c chThdExitS
08002680 g     F .text	00000002 sduInterruptTransmitted
20000810 g     O .data	00000018 keyworld
08002e80 g     F .text	0000001e usb_lld_stall_out
20000944 g     O .bss	00000408 dbg_trace_buffer
08000e20  w    F .text	00000002 PendSVVector
08000e20  w    F .text	00000002 Vector118
08001380 g     F .text	0000005c chVTSetI
08000e20  w    F .text	00000002 Vector64
200018f8 g       .bss	00000000 _bss_end
20000d50 g     O .bss	00000004 dbg_panic_msg
08000cf0  w    F .text	00000002 _default_exit
08000e20  w    F .text	00000002 VectorCC
08000e20  w    F .text	00000002 Vector54
08000e20  w    F .text	00000002 Vector98
08003550 g     F .text	00000050 start_shell
08000e20  w    F .text	00000002 VectorD8
08000e20  w    F .text	00000002 Vector24
08001290 g     F .text	0000002c chDbgCheckClassI
08002a10 g     F .text	0000003c usb_lld_reset
080015d0 g     F .text	0000004c chSchDoReschedule
08001030 g     F .text	0000007a chSysInit
08001ce0 g     F .text	0000009c usbInitEndpointI
08001790 g     F .text	00000030 chThdSleep
08001900 g     F .text	0000001a chIQInit
08000e20  w    F .text	00000002 Vector84
08002e20 g     F .text	00000020 usb_lld_prepare_transmit
08000f30 g     F .text	0000002a SysTickVector
20000940 g     O .bss	00000004 dbg_isr_cnt
08002a70 g     F .text	00000020 usb_lld_get_status_in
08002710 g     F .text	000000a2 stm32_clock_init
08000bd0 g     F .text	00000092 memchr
080027c0 g     F .text	000000a6 _pal_lld_init
08000e20  w    F .text	00000002 BusFaultVector
08000e20  w    F .text	00000002 VectorD0
08002ef0 g     F .text	0000002c usb_lld_clear_in
08002890 g     F .text	0000000c usb_lld_init
08001b50 g     F .text	0000002c _core_init
080009c0 g     F .text	0000020e strstr
08000e20  w    F .text	00000002 VectorE4
080021a0 g     F .text	00000068 _usb_ep0out
08000e20  w    F .text	00000002 VectorC0
08000f60 g     F .text	00000010 _port_switch
08000e50 g     F .text	00000012 SVCallVector
08000ce0  w    F .text	00000002 __late_init
08001350 g     F .text	0000000e chDbgPanic
20000d54 g     O .bss	00000010 vtlist
08000e20  w    F .text	00000002 HardFaultVector
08000eb0 g     F .text	00000078 _port_irq_epilogue
08001bb0 g     F .text	00000024 chCoreAlloc
080012c0 g     F .text	0000002c chDbgCheckClassS
08000e20  w    F .text	00000002 VectorF0
08000c70 g     F .text	00000062 memcmp
08000e20  w    F .text	00000002 Vector12C
08001e00 g     F .text	00000034 _usb_reset
08000e20  w    F .text	00000002 Vector100
08001250 g     F .text	00000040 dbg_check_leave_isr
08004b60 g       .text	00000000 _textdata
08000e20  w    F .text	00000002 VectorE0
08000e20  w    F .text	00000002 VectorF4
08003c40 g     F .text	00000428 microrl_insert_char
08000e20  w    F .text	00000002 MemManageVector
08000130 g       startup	00000000 __fini_array_start
08000300 g     F .text	00000098 memset
08000130 g     F .text	00000070 main
08000e20  w    F .text	00000002 Vector6C
20000d64 g     O .bss	00000020 rlist
08000e20  w    F .text	00000002 VectorA0
20000828 g     O .data	00000004 prompt_default
08001210 g     F .text	00000040 dbg_check_enter_isr
20000db4 g     O .bss	00000050 USBD1
08000130 g       startup	00000000 __init_array_end
08000e20  w    F .text	00000002 VectorC4
08000e20  w    F .text	00000002 Vector7C
20000808 g     O .data	00000008 ver_keyworld
08001830 g     F .text	0000001c chMtxInit
08001010 g     F .text	00000014 _idle_thread
08001ab0 g     F .text	00000094 chOQWriteTimeout
080033c0 g     F .text	00000188 execute
08000e20  w    F .text	00000002 VectorB0
08004250 g     O .text	00000016 ch_debug
08001c80 g     F .text	00000060 usbStart
08002f90 g     F .text	000002dc chprintf
08002b70 g     F .text	00000274 Vector90
080004a0 g     F .text	0000007e strcmp
20000d4c g     O .bss	00000004 dbg_lock_cnt
08002520 g     F .text	00000040 sduRequestsHook
08000e20  w    F .text	00000002 Vector114
08000f70 g     F .text	00000016 _port_thread_start
08000e20  w    F .text	00000002 Vector60
08000e20  w    F .text	00000002 Vector1C
08000e20  w    F .text	00000002 Vector48
08002ea0 g     F .text	0000001e usb_lld_stall_in
20000400 g       .stacks	00000000 __process_stack_base__
08003aa0 g     F .text	00000006 microrl_set_execute_callback
08003330 g     F .text	00000004 sigint
08000e20  w    F .text	00000002 Vector70
08000e20  w    F .text	00000002 VectorD4
08000fe0 g     F .text	00000030 nvicSetSystemHandlerPriority
20000880 g     O .bss	000000c0 _idle_thread_wa
08001a20 g     F .text	00000018 chOQInit
08001920 g     F .text	0000005a chIQGetTimeout
20000800 g       .data	00000000 _data
08000e20  w    F .text	00000002 Vector4C
08000e20  w    F .text	00000002 Vector80
08000e40 g     F .text	0000000e _port_switch_from_isr
080028f0 g     F .text	00000014 usb_lld_set_address
08002250 g     F .text	00000046 tmInit
08000e20  w    F .text	00000002 Vector68
080012f0 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08000e20  w    F .text	00000002 Vector78
2000082c g       .data	00000000 _edata
080013e0 g     F .text	00000048 chVTResetI
08000e20 g     F .text	00000002 _unhandled_exception
08000e20  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08001c60 g     F .text	00000004 usbInit
08000e20  w    F .text	00000002 Vector104
080028a0 g     F .text	00000050 usb_lld_start
08002470 g     F .text	0000004e sduObjectInit
08000e20  w    F .text	00000002 Vector10C
08001310 g     F .text	00000040 dbg_trace
08000130 g       startup	00000000 __init_array_start
08002e60 g     F .text	0000001e usb_lld_start_in
08002a50 g     F .text	0000001e usb_lld_get_status_out
20000e30 g     O .bss	00000008 name
08001620 g     F .text	00000052 _thread_init
08000e20  w    F .text	00000002 Vector50
08000680 g     F .text	0000005e strlen
20000e38 g     O .bss	000000d4 SDU1
080003a0 g     F .text	000000fe strchr
08001a40 g     F .text	00000064 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08003ac0 g     F .text	00000134 new_line_handler
08000e20  w    F .text	00000002 Vector44
08000e20  w    F .text	00000002 Vector28
08002f30 g     F .text	00000002 boardInit
08000e20  w    F .text	00000002 VectorB8
08003c00 g     F .text	00000034 mlab_sigint
08000e20  w    F .text	00000002 VectorFC
080011d0 g     F .text	00000034 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08003ab0 g     F .text	00000006 microrl_set_sigint_callback
08002460 g     F .text	00000002 sduInit
08000e20  w    F .text	00000002 Vector34
08002f20 g     F .text	00000004 __early_init
08002ad0 g     F .text	0000004e usb_lld_read_packet_buffer
08000e20  w    F .text	00000002 Vector128
08000e20  w    F .text	00000002 VectorA4
08002910 g     F .text	000000f8 usb_lld_init_endpoint
08000e20  w    F .text	00000002 Vector20


